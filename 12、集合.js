/**
 * 1、比较常见的实现方式是hash，
 * 集合的特点是无序的，不能重复的元素的构成
 * 特殊数组
 * 特殊之处在于里面的元素没有顺序的，也不能重复，
 * 没有顺序以为这不能通过下标访问，不能重复意味着相同的对象的在集合中只会存在一份
 * 集合间的操作
 * 通常的操作
 * 并集：对于给定的两个集合，返回一个包含两个集合中所有元素
 * 交集：对于给定的集合，返回一个包含两个集合中共有元素的新集合
 * 差集：对于给定的连个集合，返回一个包含所有存在与第一个集合且不存在与第二个集合的元素的的新集合
 * 子集：验证一个给定集合是否是集合的子集
 */
// 并集
// 集合 a和b的并集， 表示的aUb
// x 存在与 b中或者 a中
var obj = {
  a: 1
}

var obj1 = {
  b: 1
}

// 并集
// function union(a, b) {
//   return Object.assign(a, b)
// }
// 交集 x存在与 a && b
function union(a, b) {
  
}

console.log(union(obj, obj1))